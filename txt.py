import asyncio
import os
import time
from datetime import datetime

from pyrogram import Client
from pyrogram.enums import ParseMode
from dotenv import load_dotenv

# ุชุญููู ุฅุนุฏุงุฏุงุช ุงูุจูุฆุฉ
load_dotenv()

# --- ุฅุนุฏุงุฏุงุช ุฃุณุงุณูุฉ ---
API_ID = int(os.getenv('API_ID', 0))
API_HASH = os.getenv('API_HASH')
SESSION = os.getenv('SESSION')
CHANNEL_ID = int(os.getenv('CHANNEL_ID', 0))       # ุงูููุงุฉ ุงูุชู ุณูุชู ูุญุตูุง (ุงููุตุฏุฑ)
FIRST_MSG_ID = int(os.getenv('FIRST_MSG_ID', 0))   # ุฃูู ุฑุณุงูุฉ ูุชููู ุนูุฏูุง ุงููุญุต

# --- ุฅุนุฏุงุฏุงุช ูุฎุตุตุฉ ูููููุฉ ุงูุฌุฏูุฏุฉ ---
SIZE_LIMIT_MB = 50  # ุญุฏ ุงูุญุฌู ุจุงูููุฌุงุจุงูุช
SIZE_LIMIT_BYTES = SIZE_LIMIT_MB * 1024 * 1024  # ุชุญููู ุงูุญุฌู ุฅูู ุจุงูุช

# --- ูุชุบูุฑุงุช ูุชุชุจุน ุงูุฃุฏุงุก ูุงููุชุงุฆุฌ ---
start_time = None
found_videos_count = 0
report_lines = []  # ูุงุฆูุฉ ูุชุฎุฒูู ูุชุงุฆุฌ ุงูุจุญุซ ูู ุงูุฐุงูุฑุฉ

# ----------------- ุงูุฏูุงู -----------------

def write_report_to_file():
    """
    ููุชุจ ุงูุชูุฑูุฑ ุงูููุงุฆู ุงูุฐู ุชู ุชุฌููุนู ูู ููู ูุตู.
    """
    global found_videos_count, start_time, report_lines
    
    if not report_lines:
        print("โน๏ธ ูู ูุชู ุงูุนุซูุฑ ุนูู ุฃู ููุฏูููุงุช ุชุทุงุจู ุงููุนุงููุฑุ ูุฐุง ูู ูุชู ุฅูุดุงุก ููู ุชูุฑูุฑ.")
        return

    total_time = time.time() - start_time
    
    # ุฅูุดุงุก ุงุณู ููู ูุฑูุฏ ุจุงุณุชุฎุฏุงู ุงูุชุงุฑูุฎ ูุงูููุช ุงูุญุงูู
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    filename = f"report_large_videos_{timestamp}.txt"
    
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            # ูุชุงุจุฉ ุฑุฃุณ ุงูุชูุฑูุฑ (ุงูููุฎุต)
            f.write("๐ ุชูุฑูุฑ ุงูููุฏูููุงุช ุฐุงุช ุงูุญุฌู ุงููุจูุฑ ๐\n")
            f.write("=======================================\n")
            f.write(f"โข ุงูููุงุฉ ุงูุชู ุชู ูุญุตูุง: {CHANNEL_ID}\n")
            f.write(f"โข ูุนูุงุฑ ุงูุจุญุซ: ููุฏูููุงุช ุฃูุจุฑ ูู {SIZE_LIMIT_MB} ููุฌุงุจุงูุช\n")
            f.write(f"โข ุฅุฌูุงูู ุงูููุฏูููุงุช ุงูุชู ุชู ุงูุนุซูุฑ ุนูููุง: {found_videos_count}\n")
            f.write(f"โข ูุฏุฉ ุงููุญุต: {total_time:.2f} ุซุงููุฉ\n")
            f.write("=======================================\n\n")
            
            # ูุชุงุจุฉ ูุงุฆูุฉ ุงูููุฏูููุงุช ุงูุชู ุชู ุงูุนุซูุฑ ุนูููุง
            f.write("ูุงุฆูุฉ ุงูููุฏูููุงุช:\n\n")
            for line in report_lines:
                f.write(line + "\n")

        print(f"\nโ ูุฌุงุญ! ุชู ุญูุธ ุงูุชูุฑูุฑ ุจุงููุงูู ูู ุงูููู: {filename}")
        
    except Exception as e:
        print(f"\nโ ุฎุทุฃ ูุงุฏุญ ุฃุซูุงุก ูุชุงุจุฉ ููู ุงูุชูุฑูุฑ: {e}")

async def scan_for_large_videos(client, source_channel_id):
    """
    ููุญุต ุงูููุงุฉ ุจุญุซูุง ุนู ุงูููุฏูููุงุช ูุงููุณุชูุฏุงุช ุงูููุฏูู ุงูุชู ูุชุฌุงูุฒ ุญุฌููุง ุงููุญุฏุฏ
    ููููู ุจุชุฎุฒูู ุงููุชุงุฆุฌ ูู ุงูุฐุงูุฑุฉ.
    """
    global start_time, found_videos_count, report_lines
    start_time = time.time()
    
    print(f"๐ ุจุฏุฃ ูุญุต ุงูููุงุฉ {source_channel_id} ุนู ุงูููุฏูููุงุช ุงูุฃูุจุฑ ูู {SIZE_LIMIT_MB} ููุฌุงุจุงูุช...")
    
    messages_scanned = 0
    source_channel_link_prefix = str(source_channel_id).replace("-100", "")

    async for message in client.get_chat_history(source_channel_id):
        # ุงูุชููู ุนูุฏ ุงููุตูู ุฅูู ุฃูุฏู ุฑุณุงูุฉ ูุญุฏุฏุฉ
        if message.id <= FIRST_MSG_ID:
            print("โน๏ธ ุชู ุงููุตูู ุฅูู ุฃูุฏู ุฑุณุงูุฉ ูุญุฏุฏุฉ (FIRST_MSG_ID). ุฅููุงู ุงููุญุต.")
            break

        messages_scanned += 1
        if messages_scanned % 500 == 0:
            print(f"โณ ุชู ูุญุต {messages_scanned} ุฑุณุงูุฉ ุญุชู ุงูุขู...")

        media = message.video or message.document
        
        if not media:
            continue

        is_valid_video_document = (
            message.document and 
            message.document.mime_type and 
            message.document.mime_type.startswith("video/")
        )

        if message.video or is_valid_video_document:
            file_size = media.file_size
            
            if file_size > SIZE_LIMIT_BYTES:
                found_videos_count += 1
                
                link = f"https://t.me/c/{source_channel_link_prefix}/{message.id}"
                size_in_mb = file_size / (1024 * 1024)
                
                # ุฅูุดุงุก ูุต ุงูุชูุฑูุฑ ููุฑุณุงูุฉ ุงูุญุงููุฉ
                report_line = (
                    f"๐ ุงูุฑุงุจุท: {link}\n"
                    f"๐พ ุงูุญุฌู: {size_in_mb:.2f} ููุฌุงุจุงูุช\n"
                    f"--------------------------------"
                )
                
                # ุฅุถุงูุฉ ุงูุณุทุฑ ุฅูู ูุงุฆูุฉ ุงูุชูุงุฑูุฑ ูู ุงูุฐุงูุฑุฉ
                report_lines.append(report_line)
                
                # ุทุจุงุนุฉ ุฅุดุนุงุฑ ูู ุงูุทุฑููุฉ ูููุชุงุจุนุฉ ุงููุจุงุดุฑุฉ
                print(f"   [ุชู ุงูุนุซูุฑ ุนูู] {link} - ุงูุญุฌู: {size_in_mb:.2f} MB")

    print(f"\n๐ ุงูุชููุช ุนูููุฉ ุงููุญุต ูู {time.time() - start_time:.2f} ุซุงููุฉ.")

# ----------------- ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ -----------------

async def main():
    async with Client("video_finder_session", api_id=API_ID, api_hash=API_HASH) as client:
        print("๐ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ ุจุญุณุงุจ ุชูููุฌุฑุงู.")

        print("๐ก ุฌุงุฑู ุงูุชุญูู ูู ุตูุงุญูุฉ ุงููุตูู ุฅูู ุงูููุงุฉ ุงููุตุฏุฑ...")
        try:
            await client.get_chat(CHANNEL_ID)
            print("โ ุชู ุงูุชุญูู ูู ุงููุตูู ุฅูู ุงูููุงุฉ ุจูุฌุงุญ.")
        except Exception as e:
            print(f"โ ุฎุทุฃ ูุงุฏุญ: ูุง ูููู ุงููุตูู ุฅูู ุงูููุงุฉ {CHANNEL_ID}. ุชุฃูุฏ ูู ุตุญุฉ ุงููุนุฑู ูุฃู ุงูุญุณุงุจ ุนุถู ูููุง.")
            print(f"   ุชูุงุตูู ุงูุฎุทุฃ: {e}")
            return

        # --- ุจุฏุก ุงููููุฉ ุงูุฑุฆูุณูุฉ ---
        await scan_for_large_videos(client, CHANNEL_ID)
        
        # --- ูุชุงุจุฉ ุงูุชูุฑูุฑ ุงููุฌูุน ูู ููู ูุตู ---
        write_report_to_file()

if __name__ == '__main__':
    print("๐น ุจุฏุก ุชุดุบูู ุงูุณูุฑุจุช...")
    asyncio.run(main())
