import asyncio
import os
import time

from pyrogram import Client
from dotenv import load_dotenv

# ุชุญููู ุฅุนุฏุงุฏุงุช ุงูุจูุฆุฉ
load_dotenv()

# ุฅุนุฏุงุฏุงุช ุชูููุฌุฑุงู
API_ID = int(os.getenv('API_ID', 0))
API_HASH = os.getenv('API_HASH')
SESSION = os.getenv('SESSION') # ุณูุชู ุงุณุชุฎุฏุงูู ูุฅูุดุงุก ุงุณู ููู ุงูุฌูุณุฉ
CHANNEL_ID = int(os.getenv('CHANNEL_ID', 0))  # ุงูููุงุฉ ุงููุตุฏุฑ ุงูุชู ุณูุชู ูุญุตูุง
FIRST_MSG_ID = int(os.getenv('FIRST_MSG_ID', 0))

# ุชุญุฏูุฏ ุญุฌู ุงูููู ุจุงูุจุงูุช (50 ููุฌุงุจุงูุช)
MIN_FILE_SIZE_BYTES = 50 * 1024 * 1024

# ุงุณู ููู ุงูุชูุฑูุฑ
REPORT_FILENAME = "report.txt"

# ----------------- ุงูุฏูุงู -----------------

async def collect_large_files(client, channel_id, first_msg_id):
    """
    ุชููู ุจูุณุญ ุงูููุงุฉ ูุชุฌููุน ุงูุฑุณุงุฆู ุงูุชู ุชุญุชูู ุนูู ููุฏูููุงุช ุฃู ูุณุชูุฏุงุช
    ุฃูุจุฑ ูู ุงูุญุฌู ุงููุญุฏุฏ.
    """
    large_files_messages = []
    print("ุฌุงุฑู ูุณุญ ุงูุฑุณุงุฆู ูู ุงูููุงุฉ ููุจุญุซ ุนู ุงููููุงุช ุงููุจูุฑุฉ...")
    messages_scanned = 0
    
    async for message in client.get_chat_history(channel_id):
        if message.id <= first_msg_id:
            break

        messages_scanned += 1
        if messages_scanned % 500 == 0:
            print(f"ุชู ูุณุญ {messages_scanned} ุฑุณุงูุฉ ุญุชู ุงูุขู...")

        media = message.video or message.document
        if media and hasattr(media, 'file_size') and media.file_size > MIN_FILE_SIZE_BYTES:
            large_files_messages.append(message)
            
    print(f"ุงูุชูู ุงููุณุญ. ุชู ุงูุนุซูุฑ ุนูู {len(large_files_messages)} ููู ุจุญุฌู ุฃูุจุฑ ูู 50 ููุฌุงุจุงูุช.")
    return large_files_messages

async def generate_report_file(messages, source_chat_id):
    """
    ุชููู ุจุฅูุดุงุก ููู ูุตู ูุญุชูู ุนูู ุฑูุงุจุท ูุฃุญุฌุงู ุงููููุงุช ุงููุจูุฑุฉ.
    """
    if not messages:
        print("ูู ูุชู ุงูุนุซูุฑ ุนูู ูููุงุช ุชุทุงุจู ุงูุดุฑูุท. ูู ูุชู ุฅูุดุงุก ููู ุชูุฑูุฑ.")
        return

    source_channel_id_for_link = str(source_chat_id).replace("-100", "")

    with open(REPORT_FILENAME, 'w', encoding='utf-8') as f:
        f.write(f"ุชูุฑูุฑ ุจุงููููุงุช ุงูุชู ูุฒูุฏ ุญุฌููุง ุนู {MIN_FILE_SIZE_BYTES / (1024*1024):.0f} ููุฌุงุจุงูุช\n")
        f.write("="*50 + "\n\n")

        # ูุฑุฒ ุงูุฑุณุงุฆู ูู ุงูุฃูุฏู ุฅูู ุงูุฃุญุฏุซ ูุนุฑุถูุง ุจุชุฑุชูุจ ููุทูู ูู ุงูุชูุฑูุฑ
        sorted_messages = sorted(messages, key=lambda m: m.id)

        for message in sorted_messages:
            media = message.video or message.document
            file_size_mb = media.file_size / (1024 * 1024)
            link = f"https://t.me/c/{source_channel_id_for_link}/{message.id}"
            
            report_line = f"ุงูุฑุงุจุท: {link}\nุงูุญุฌู: {file_size_mb:.2f} MB\n"
            report_line += "-"*30 + "\n"
            
            f.write(report_line)

    print(f"โ ุชู ุฅูุดุงุก ุงูุชูุฑูุฑ ุจูุฌุงุญ ูุญูุธู ูู ููู: {REPORT_FILENAME}")

async def find_large_files_and_report(client, channel_id):
    """
    ุงููุธููุฉ ุงูุฑุฆูุณูุฉ ุงูุชู ุชูุณู ุนูููุฉ ุงูุจุญุซ ูุฅูุดุงุก ุงูุชูุฑูุฑ.
    """
    start_time = time.time()
    print("\n๐ ุจุฏุก ุนูููุฉ ุงูุจุญุซ ุนู ุงูููุฏูููุงุช ูุงููุณุชูุฏุงุช ุงูุชู ูุฒูุฏ ุญุฌููุง ุนู 50 ููุฌุงุจุงูุช...")
    
    large_files = await collect_large_files(client, channel_id, FIRST_MSG_ID)
    
    await generate_report_file(large_files, channel_id)
    
    print(f"๐ ุงูุชููุช ุงูุนูููุฉ ูู {time.time() - start_time:.2f} ุซุงููุฉ.")

# ----------------- ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ (ูุน ุงูุชุญูู ุงููุฏูุฌ) -----------------

async def main():
    # ุงุณุชุฎุฏุงู ุงุณู ุฌูุณุฉ ูุฎุตุต ูุชุฌูุจ ุงูุชุนุงุฑุถ. Pyrogram ุณูููุดุฆ ููู 'scanner_session.session'
    async with Client("scanner_session", api_id=API_ID, api_hash=API_HASH) as client:
        print("๐ ุงุชุตุงู ูุงุฌุญ ุจุงูุชูููุฌุฑุงู ุนุจุฑ Pyrogram.")

        # --- ุจุฏุงูุฉ ูุชูุฉ ุงูุชุญูู ุงููุทููุจุฉ ---
        print("๐ก ุฌุงุฑู ุงูุชุญูู ูู ุงููุตูู ุฅูู ุงูููุงุฉ ุงููุตุฏุฑ...")
        try:
            # ุงูุชุญูู ูู ุฃู ุงูุญุณุงุจ ููููู ุงููุตูู ุฅูู ุงูููุงุฉ ุงููุทููุจุฉ
            await client.get_chat(CHANNEL_ID)
            print("โ ุชู ุงูุชุญูู ูู ุงููุตูู ุฅูู ุงูููุงุฉ ุงููุตุฏุฑ ุจูุฌุงุญ.")
        except Exception as e:
            # ูู ุญุงูุฉ ุงููุดูุ ุงุทุจุน ุฑุณุงูุฉ ุฎุทุฃ ูุงุถุญุฉ ูุชููู ุนู ุงูุชูููุฐ
            print(f"โ ุฎุทุฃ ูุงุฏุญ: ูุง ูููู ุงููุตูู ุฅูู ุงูููุงุฉ ุงููุตุฏุฑ (CHANNEL_ID: {CHANNEL_ID}).")
            print(f"ุชูุงุตูู ุงูุฎุทุฃ: {e}")
            print("\nูุฑุฌู ุงูุชุฃูุฏ ูู ุฃู: \n1. ูุนุฑู ุงูููุงุฉ ุตุญูุญ.\n2. ุงูุญุณุงุจ ุงููุณุชุฎุฏู ูู ุนุถู ูู ุงูููุงุฉ ุงูุฎุงุตุฉ.")
            return # ุฅููุงู ุงูุณูุฑุจุช
        # --- ููุงูุฉ ูุชูุฉ ุงูุชุญูู ---

        # ุฅุฐุง ูุฌุญ ุงูุชุญููุ ุงุณุชูุฑ ูู ุชูููุฐ ุงููุธููุฉ ุงูุฑุฆูุณูุฉ
        await find_large_files_and_report(client, CHANNEL_ID)

if __name__ == '__main__':
    print("๐น ุจุฏุก ุชุดุบูู ุฃุฏุงุฉ ูุญุต ุงููููุงุช ุงููุจูุฑุฉ...")
    asyncio.run(main())
